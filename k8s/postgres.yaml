apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: manual   # ðŸ‘ˆ chave para ligar PV e PVC
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /data/postgres
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: acougue-system
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: manual   # ðŸ‘ˆ precisa ser igual ao PV
  resources:
    requests:
      storage: 1Gi
  volumeName: postgres-pv
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-initdb
  namespace: acougue-system
data:
  init.sql: |
    CREATE DATABASE acougue;
    CREATE DATABASE estoque;
    CREATE DATABASE clientes;
    CREATE DATABASE auth_service;
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: acougue-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: admin
            - name: POSTGRES_PASSWORD
              value: admin
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
            - name: initdb
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
        - name: initdb
          configMap:
            name: postgres-initdb
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: acougue-system
spec:
  selector:
    app: postgres
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
